---
- name: 'Include OS specific vars'
  ansible.builtin.include_vars: "{{ ansible_facts['os_family'] }}-{{ ansible_facts['distribution_major_version'] }}.yml"
  no_log: true

- name: 'Ensure pypiserver service account'
  ansible.builtin.user:
    name: "{{ pypiserver_user }}"
    create_home: false

- name: 'Ensure local pip directory'
  ansible.builtin.file:
    path: "{{ pypiserver_path }}/packages"
    state: 'directory'
    owner: "{{ pypiserver_user }}"
    group: "{{ pypiserver_user }}"
    mode: '0755'

- name: 'Ensure pip packages'
  ansible.builtin.copy:
    src: "{{ pip_pkg }}"
    dest: "{{ pypiserver_path }}/packages/{{ pip_pkg }}"
    owner: "{{ pypiserver_user }}"
    group: "{{ pypiserver_user }}"
    mode: '0644'
  loop:
    - 'pypiserver-1.4.2-py2.py3-none-any.whl'
  loop_control:
    loop_var: 'pip_pkg'

- name: 'Ensure system pip'
  ansible.builtin.package:
    name: "{{ pypiserver_pip_pkg }}"
    state: 'present'

- name: 'Ensure pypiserver from pip'
  ansible.builtin.pip:
    name: "file://{{ pypiserver_path }}/packages/pypiserver-1.4.2-py2.py3-none-any.whl"
    state: 'present'
    umask: "0022"
    executable: "{{ pypiserver_pip_exe | default(omit) }}"

- name: 'Ensure systemd unit'
  ansible.builtin.template:
    src: 'pypiserver.service.j2'
    dest: '/etc/systemd/system/pypiserver.service'
    owner: 'root'
    group: 'root'
    mode: 0644
  notify: 'reload systemd'

- name: 'Run handlers'
  meta: 'flush_handlers'

- name: 'Ensure service'
  ansible.builtin.systemd:
    name: 'pypiserver'
    state: 'started'
    enabled: true
